<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <parent>
    <artifactId>java-ee-payara</artifactId>
    <groupId>com.github.daggerok</groupId>
    <version>1.0.0-SNAPSHOT</version>
  </parent>

  <modelVersion>4.0.0</modelVersion>
  <artifactId>java-ee-payara-rest-services</artifactId>
  <packaging>war</packaging>

  <properties>
    <endorsed.dir>${project.build.directory}/endorsed</endorsed.dir>
  </properties>

  <dependencies>
    <dependency>
      <groupId>com.github.daggerok</groupId>
      <artifactId>java-ee-payara-libraries</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>fish.payara.extras</groupId>
      <artifactId>payara-embedded-web</artifactId>
      <version>${payara.micro.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>io.vavr</groupId>
      <artifactId>vavr</artifactId>
    </dependency>

    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
    </dependency>
  </dependencies>

  <build>
    <defaultGoal>clean package</defaultGoal>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.0</version>
        <configuration>
          <encoding>${project.build.sourceEncoding}</encoding>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
          <compilerArguments>
            <endorseddirs>${endorsed.dir}</endorseddirs>
          </compilerArguments>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>bundle</id>
      <build><!-- ./mvnw -Pbundle -pl :rest-services
      ./mvnw -pl :rest-services package payara-micro:bundle -Pbundle -->
        <defaultGoal>payara-micro:bundle</defaultGoal>
        <plugins>
          <plugin>
            <groupId>fish.payara.maven.plugins</groupId>
            <artifactId>payara-micro-maven-plugin</artifactId>
            <version>${payara-micro-maven-plugin.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>bundle</goal>
                </goals>
                <phase>package</phase>
              </execution>
            </executions>
            <configuration>
              <payaraVersion>${payara.micro.version}</payaraVersion>
              <commandLineOptions>
                <option>
                  <key>--autobindhttp</key>
                  <value>true</value>
                </option>
                <option>
                  <key>--clusterName</key>
                  <value>${project.artifactId}</value>
                </option>
              </commandLineOptions>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>start</id>
      <build><!-- ./mvnw -Pstart -pl :rest-services
      ./mvnw -pl :rest-services package payara-micro:bundle payara-micro:start -Pstart -->
        <defaultGoal>payara-micro:start</defaultGoal>
        <plugins>
          <plugin>
            <groupId>fish.payara.maven.plugins</groupId>
            <artifactId>payara-micro-maven-plugin</artifactId>
            <version>${payara-micro-maven-plugin.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>start</goal>
                </goals>
                <phase>site</phase>
              </execution>
            </executions>
            <configuration>
              <payaraVersion>${payara.micro.version}</payaraVersion>
              <useUberJar>true</useUberJar>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>java9+</id>
      <activation>
        <jdk>[11,)</jdk>
      </activation>
      <properties>
        <java.version>11</java.version>
      </properties>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-compiler-plugin</artifactId>
              <version>${maven-compiler-plugin.version}</version>
              <configuration>
                <release>${java.version}</release>
              </configuration>
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-surefire-plugin</artifactId>
              <version>${maven-surefire-plugin.version}</version>
              <configuration>
                <argLine>
                  --illegal-access=permit
                </argLine>
              </configuration>
            </plugin>
            <!--<plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-failsafe-plugin</artifactId>
              <version>2.22.2</version>
              <configuration>
                <argLine>
                  &#45;&#45;illegal-access=permit
                </argLine>
              </configuration>
            </plugin>-->
            <plugin>
              <groupId>fish.payara.maven.plugins</groupId>
              <artifactId>payara-micro-maven-plugin</artifactId>
              <version>${payara-micro-maven-plugin.version}</version>
              <configuration>
                <javaCommandLineOptions>
                  <option>
                    <value>-Xdebug</value>
                  </option>
                  <option>
                    <key>-Xrunjdwp:transport</key>
                    <value>dt_socket,server=y,suspend=y,address=5005</value>
                  </option>
                  <option>
                    <value>--illegal-access=permit</value>
                  </option>
                  <option>
                    <key>--add-modules</key>
                    <value>java.se</value>
                  </option>
                  <option>
                    <key>--add-exports</key>
                    <value>java.base/jdk.internal.ref=ALL-UNNAMED</value>
                  </option>
                  <option>
                    <key>--add-opens</key>
                    <value>java.base/java.lang=ALL-UNNAMED</value>
                  </option>
                  <option>
                    <key>--add-opens</key>
                    <value>java.base/java.nio=ALL-UNNAMED</value>
                  </option>
                  <option>
                    <key>--add-opens</key>
                    <value>java.base/sun.nio.ch=ALL-UNNAMED</value>
                  </option>
                  <option>
                    <key>--add-opens</key>
                    <value>java.management/sun.management=ALL-UNNAMED</value>
                  </option>
                  <option>
                    <key>--add-opens</key>
                    <value>jdk.management/com.sun.management.internal=ALL-UNNAMED</value>
                  </option>
                  <!-- https://github.com/java-decompiler/jd-gui/issues/187 -->
                  <option>
                    <key>--add-opens</key>
                    <value>java.base/jdk.internal.loader=ALL-UNNAMED</value>
                  </option>
                  <option>
                    <key>--add-opens</key>
                    <value>jdk.zipfs/jdk.nio.zipfs=ALL-UNNAMED</value>
                  </option>
                </javaCommandLineOptions>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
  </profiles>
</project>
